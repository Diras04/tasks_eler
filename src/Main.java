import jdk.nashorn.internal.ir.WhileNode;

//TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
// click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
public class Main {


    public static void main(String[] args) {
 /* №2 Каждый следующий элемент ряда Фибоначчи получается при сложении двух предыдущих.
     Начиная с 1 и 2, первые 10 элементов будут:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Найдите сумму всех четных элементов ряда Фибоначчи, которые не превышают четыре миллиона.*/
      /*  int a = 1;
        int b = 2;
        int sum = 0;

        while (b <= 4000000) {
            if (b % 2 == 0) {
                sum += b;
            }
            int next = a + b;
            a = b;
            b = next;
        }
        System.out.println(sum);*/
        /* *********************************************************************************/




/* №3 найбільший цілий дільник
        long k = 600851475143L;
        long i = 2;
        long largestFactor = 0;

        while (k > 1) {
            if (k % i == 0) {
                k /= i;
                largestFactor = i;
            } else {
                i++;
            }
        }
        System.out.println(largestFactor);
        ************************************************************************************/
        /* №4 Число-палиндром с обеих сторон (справа налево и слева направо) читается одинаково.
        Самое большое число-палиндром, полученное умножением двух двузначных чисел – 9009 = 91 × 99.

Найдите самый большой палиндром, полученный умножением двух трехзначных чисел.*/
       /* int mult;
        int max = 0;
        int polynd;
        int fc;
        int mnog1 = 0;
        int mnog2 = 0;
        for (int a = 100; a < 1000; a++) {
            for (int b = 100; b < 1000; b++) {
                mult = a * b;
                polynd = mult;
                int count = 0;
                while (polynd > 0) {
                    fc = polynd % 10;
                    count = (count * 10) + fc;
                    polynd /= 10;
                }
                if (mult == count && mult > max) {
                    max = mult;
                    mnog1 = a;
                    mnog2 = b;
                }
            }
        }
        System.out.println("Найбільший поліндром - " + max + ", це добуток "
                + mnog1 + " та " + mnog2);*/
        /* ************************************************************************ */
        /*2520 - самое маленькое число, которое делится без остатка на все числа от 1 до 10.

Какое самое маленькое число делится нацело на все числа от 1 до 20? відповідь - 232792560 */
     /*   int dil = 20;
        int count = 0;
        int result = 0;
        boolean d = true;
        while (d) {
            for (int i = 2; i <= 20; i++) {
                if (dil % i == 0)
                {
                    count++;
                } else
                {
                    break;
                }
            }
            if (count == 19)
            {
                result = dil;
                d = false;
            }
            dil++;
            count = 0;
        }
        System.out.println(result);
***********************************************************************************************************/
     /* №6  Сумма квадратов первых десяти натуральных чисел равна

        12 + 22 + ... + 102 = 385
        Квадрат суммы первых десяти натуральных чисел равен

                (1 + 2 + ... + 10)2 = 552 = 3025
        Следовательно, разность между суммой квадратов и квадратом суммы первых десяти натуральных чисел составляет 3025 − 385 = 2640.

        Найдите разность между суммой квадратов и квадратом суммы первых ста натуральных чисел. Ответ - 25164150 */

       /* int sk = 0;
        int ks = 0;
        for (int i = 1; i <= 100; i++) {
            sk = sk + (i * i);
            ks = ks + i;
        }
        System.out.println((ks * ks) - sk);
        *******************************************************************************************************/

        /* № 7 Выписав первые шесть простых чисел, получим 2, 3, 5, 7, 11 и 13. Очевидно, что 6-е простое число - 13.

Какое число является 10001-м простым числом?*/
        int count = 1;  // Першим простим числом вважаємо 2
        int b = 1;      // Почнемо перевірку з 1 (бо будемо збільшувати на 2)
        int rez = 0;

        while (count < 10001) {
            b += 2;  // Перевіряємо тільки непарні числа
            if (isPrime(b)) {
                count++;
                rez = b;
            }
        }

        System.out.println(rez);
    }

    // Функція перевірки на простоту***
    public static boolean isPrime(int num) {
        if (num < 2) return false;
        if (num % 2 == 0 && num != 2) return false;
        for (int i = 3; i * i <= num; i += 2) {
            if (num % i == 0) return false;
        }
        return true;

    }
}